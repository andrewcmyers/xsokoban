AC_INIT(xsokoban.man)
  
############################################################################
# Create config files
AC_CONFIG_HEADER(config_local.h)

############################################################################
# Check for programs

AC_WITH(gcc,CC=gcc)

AC_PROG_INSTALL
AC_PROG_CC
AC_PROG_CPP

#####################
# Find Xpm if needed

(cat config.h; echo "use_xpm=USE_XPM;www=WWW") > tmp.$$.c
$CPP tmp.$$.c | egrep -v "^#" > tmp2.$$
. ./tmp2.$$
if test $use_xpm = 1; then
    echo "Looking for Xpm">&2
    libxpm=1
    incxpm=1
    AC_HAVE_LIBRARY(-lXpm, [LIBS="$LIBS -lXpm"],
	[ 
	  libok=no;
	  for lib in /usr/local/lib xpm*/lib ../xpm*/lib;
	  do
	    if test -r $lib/libXpm.a; then
		echo "  Found it in $lib!" >&2;
		LIBS="$LIBS -L$lib -lXpm";
		libok=yes;
		break;
	    fi
	  done
	  if test $libok = no; then
	      echo "Can't find libXpm.a! You must add to LIBS in Makefile.">&2
	  fi
	])
    AC_HEADER_CHECK(xpm.h,,
	[
	  incok=no;
	  for inc in /usr/local/include /usr/local/include/X11 \
		xpm*/lib ../xpm*/lib;
	  do
	    if test -r $inc/xpm.h; then
		echo "  Found it in $inc!" >&2;
		INCS="$INCS -I$inc";
		incok=yes;
		break;
	    fi
	  done
	  if test $incok = no; then
	    echo "Can't find xpm.h! You must add to INCS in Makefile.">&2
	  fi
	  ])
fi
rm -f tmp.$$.c tmp2.$$

###################
# Find X

AC_FIND_X
if test -n "$no_x"; then
  echo "Cannot find X libraries! Package may not compile">&2
  x_includes=
  x_libraries=-lX11
else
  if test "x$x_includes" != x &&
     test "x$x_includes" != x/usr/include; then
    INCS="$INCS -I$x_includes"
  fi 
  if test "x$x_libraries" != x &&
     test "x$x_libraries" != x/usr/lib; then
    LIBS="$LIBS -L$x_libraries"
  fi
  LIBS="$LIBS -lX11"
fi

AC_SUBST(LIBS)
AC_SUBST(INCS)

##############
# DEC bogosity

AC_HAVE_LIBRARY(-ldnet_stub)

##############
# Figure out SUPERUSER
(cat config.h; echo "superuser=SUPERUSER;www=WWW") > tmp.$$.c
$CPP tmp.$$.c | egrep -v "^#" > tmp2.$$
. ./tmp2.$$
SUPERUSER="$superuser"
echo "game owner is $SUPERUSER"
AC_SUBST(SUPERUSER)

####################################
# Turn on all compiler warning flags

if test -n "$GCC"
then
  WARN=-Wall
else
  if test -f /bin/uname &&
     test `uname` = OSF1 
  then
	WARN=-std1
  else
	WARN=
  fi
fi
AC_SUBST(WARN)

############################################################################
# Check for library functions and C++ prototypes

AC_COMPILE_CHECK([getpass prototype],
[#include <stdlib.h>],
[char *s = getpass("prompt");],
AC_DEFINE(GETPASS_PROTO))

AC_COMPILE_CHECK([fprintf prototype],
[#include <stdio.h>],
[fprintf(stderr, "foo");],
AC_DEFINE(FPRINTF_PROTO))

AC_COMPILE_CHECK([fclose prototype],
[#include <stdio.h>],
[FILE *f; fclose(f);],
AC_DEFINE(FCLOSE_PROTO))

AC_COMPILE_CHECK([time prototype],
[#include <time.h>],
[time_t t; t = time(&t);],
AC_DEFINE(TIME_PROTO))

AC_COMPILE_CHECK([localtime prototype],
[#include <time.h>],
[time_t t; struct tm stm = *localtime(&t);],
AC_DEFINE(LOCALTIME_PROTO))

AC_COMPILE_CHECK([mktemp prototype],
[#include <stdlib.h>],
[char *s = mktemp("fooXXXXXX"); ],
AC_DEFINE(MKTEMP_PROTO))

AC_COMPILE_CHECK([perror prototype],
[#include <errno.h>
#include <stdio.h>],
[perror("bleah"); ],
AC_DEFINE(PERROR_PROTO))

AC_COMPILE_CHECK([rename prototype],
[#include <unistd.h>
#include <stdio.h>],
[int x = rename("foo", "bar");],
AC_DEFINE(RENAME_PROTO))

AC_COMPILE_CHECK([strdup prototype],
[#include <string.h>],
[char *s = strdup("foo");],
AC_DEFINE(STRDUP_PROTO))

AC_COMPILE_CHECK([usleep],
[#include <stdlib.h>],
[unsigned x = usleep(1);],
AC_DEFINE(HAS_USLEEP))

AC_COMPILE_CHECK([bzero prototype],
[#include <stdlib.h>],
[char *x; int l; bzero(x, l);],
AC_DEFINE(BZERO_PROTO))

AC_HAVE_HEADERS(limits.h sys/select.h)

echo "looking for htons, ntohs" >&2
define(ACHTONS_CHECK,
    AC_COMPILE_CHECK([htons in $1],
    [
#include <sys/types.h>
#include <$1>
    ],
    [short x,y; x = htons(y);],
    AC_DEFINE($2)))
ACHTONS_CHECK(machine/endian.h, NEED_ENDIAN)
ACHTONS_CHECK(netinet/in.h, NEED_NETINET_IN)
ACHTONS_CHECK(net/nh.h, NEED_NH)
ACHTONS_CHECK(sys/byteorder.h, NEED_BYTEORDER)

############################################################################
# Build configured files

AC_OUTPUT(Makefile)
